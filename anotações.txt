01-introdução a APIs no laravel

1-arquitetura de APIs resful e design de APIs 
-API faz o meu campo entre banco de dados, e a aplicação que vai consumir(web, android, IOS, API)
-algumas são abertas, outras requerem autenticação 
-no domininio sempre usará: https://dominio.com.br/api/recurso 
-os formatos de respostas são: JSON ou XML, mas o principal é o JSON 
-conhecer os verbos HTTP? GET, POST, PATH, PUT, DELETE, OPTIONS 
-status code: success 200, redirect 300, client error 400, server error 500
-existe versionamento da API, no endereço cria-se a v1, em seguida cria-se uma v2 para atualizações, para não prejudicar quem consome a primeira 
-necessário liberação do CORS 
-tratamento de erros, interceptar erros e excessões: app/Exceptions/Handler.php 
-middlewares, que são filtros de acesso. Pode controlar o total de requisições em menos de 1 minutos, por exemplo(robos e etx..)

2-ferramentas para o curso de laravel web services 
-laradock(usado docker mesmo com template próprio)
-vs code 
-postman, app para testes de API, simulando requisições 

3-configurações iniciais no laravel 
-instalado o template próprio laravel/docker 
-ajustado o timezone
-configurado o .env 


02-API de categorias 

4-criar model e tabela de categorias laravel web service 
-criada model e migration de Category 
-conectado ao banco de dados 
-rodada as migration pendentes e novas 

5-listar categorias laravel web service 
-criação do controller de Category
    php artisan make:controller CategoryController 
-controller de API é recomendável ficar dentro de uma pasta API 
-configurado o método index() em CategoryController 
-criada a Route, index em api.php 
-para acessar esta Route de api usa: 
    http://127.0.0.1:8989/api/categories 

6-opção de filtros em categorias laravel web services 
-criado uma query com where no controller de Category e depois realocada na model de Category 

7-Cadastrar Categoria API laravel 
-criado o método store() em CategoryController 
-criado a Route, post, store de CategoryController
-configurado o $fillable da model Category

8-editar categoria API laravel 
-criado o método update($id) em CategoryController 
-criado a Route, put, update de CategoryController

9-validar cadastro API laravel com Form Request 
-criação da class Form Request para centralizar o sistema de validação 
    php artisan make:request StoreUpdateFormRequest
    definir authorize() como true 
    em rules(), return, feito as regras de validação 
-no método em que a validação de StoreUpdateFormRequest for utilizada, no parâmetro do método, 
    deve-se substituir o Request por StoreUpdateFormRequest 

10-validar edição API laravel com Form Request 
-no método em que a validação de StoreUpdateFormRequest for utilizada, no parâmetro do método, 
    deve-se substituir o Request por StoreUpdateFormRequest 

11-deletar categoria API no laravel 
-criado o método delete($id) em CategoryController 
-criado a Route, delete, delete de CategoryController

12-implementar rotas API simplificadas no laravel 
-ok, mas não deu boa 

13-visualizar detalhes categoria API laravel 
-implementando a funcionalidade show 
-criado o método show($id) em CategoryController 
-criado a Route, show, de CategoryController


03-API de Produtos 


